<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GPT Lead Generator</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>

<body class="bg-gray-100 flex flex-col items-center min-h-screen">
    <header class="text-gray-600 body-font w-full">
        <div class="container mx-auto flex flex-wrap p-5 flex-col md:flex-row items-center">
            <a class="flex title-font font-medium items-center text-gray-900 mb-4 md:mb-0">
                <span class="ml-3 text-xl">GPT Lead Generator</span>
            </a>
        </div>
    </header>

    <!-- Ad Area Top -->
    <div class="ad-area w-11/12 bg-white shadow p-4 my-2 max-h-1/3 overflow-y-auto">
        <% adLists.adList1.forEach(ad=> { %>
            <div class="mb-2 text-blue-600 font-semibold bg-green-100">
                <%= ad %>
            </div>
        <% }) %>
    </div>

    <!-- App Area -->
    <div class="app-area w-11/12 bg-white shadow flex flex-grow my-2 max-h-screen">
        <!-- Left Section -->
        <div class="left w-2/5 p-4 border-r overflow-y-auto">
            <div id="results" class="results"></div>
        </div>

        <!-- Middle Section -->
        <div class="middle w-1/5 p-4 border-r">
            <div class="ad-area bg-white shadow p-4 my-1 max-h-72 overflow-y-auto w-full">
                <% adLists.adList3.forEach(ad=> { %>
                    <div class="mb-2 text-blue-600 font-semibold bg-green-100">
                        <%= ad %>
                    </div>
                <% }) %>
            </div>
            <div class="instructions my-4 text-gray-700 max-h-48 overflow-y-auto">Click the buttons on the right to generate results.</div>
            <div id="timer" class="timer text-gray-700">Countdown Timer</div>
        </div>

        <!-- Right Section -->
        <div class="right w-2/5 p-4 flex flex-col relative">
            <div class="search-controls flex flex-col space-y-2">
                <select id="site-select" class="p-2 border rounded">
                    <option value="">Select a site</option>
                    <% sites.forEach(site=> { %>
                        <option value="<%= site %>">
                            <%= site %>
                        </option>
                    <% }) %>
                </select>
                <div class="relative preset-buttons-container">
                    <div id="overlay" class="absolute inset-0 bg-gray-300 opacity-30"></div>
                    <div class="preset-buttons flex flex-col space-y-2 max-h-96 overflow-y-auto">
                        <% searchPresets.forEach(preset=> { %>
                            <button class="preset-button p-2 bg-blue-300 text-white rounded cursor-not-allowed"
                                data-preset="<%= preset %>" disabled>
                                <%= preset %>
                            </button>
                        <% }) %>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Ad Area Bottom -->
    <div class="ad-area w-11/12 bg-white shadow p-4 my-2 max-h-1/3 overflow-y-auto">
        <% adLists.adList2.forEach(ad=> { %>
            <div class="mb-2 text-blue-600 font-semibold bg-green-100">
                <%= ad %>
            </div>
        <% }) %>
    </div>

    <!-- Modal -->
    <div id="modal" class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 hidden">
        <div class="bg-white p-6 rounded shadow-md text-center">
            <p class="text-lg font-semibold">Copied to Clipboard</p>
        </div>
    </div>

    <script>
        const siteSelect = document.getElementById('site-select');
        const presetButtons = document.querySelectorAll('.preset-button');
        const overlay = document.getElementById('overlay');

        document.addEventListener('DOMContentLoaded', () => {
            fetch('/api/check-session')
                .then(response => response.json())
                .then(data => {
                    let timeLeft = data.timeLeft;
                    if (timeLeft > 0) {
                        hideOverlay();
                        let val = Math.round(timeLeft / 1000) // Convert milliseconds to seconds
                        startSessionTimer(val);
                    } else {
                        showOverlay();
                    }
                });

            siteSelect.addEventListener('change', () => {
                const site = siteSelect.value;
                if (site) {
                    hideOverlay();
                } else {
                    showOverlay();
                }

                presetButtons.forEach(button => {
                    if (site) {
                        button.classList.remove('bg-blue-300', 'cursor-not-allowed');
                        button.classList.add('bg-blue-500', 'hover:bg-blue-700', 'cursor-pointer');
                        button.disabled = false;
                    } else {
                        button.classList.add('bg-blue-300', 'cursor-not-allowed');
                        button.classList.remove('bg-blue-500', 'hover:bg-blue-700', 'cursor-pointer');
                        button.disabled = true;
                    }
                });
            });

            document.querySelectorAll('.preset-button').forEach(button => {
                button.addEventListener('click', () => {
                    const preset = button.getAttribute('data-preset');
                    const site = siteSelect.value;
                    searchGoogle(site, preset);
                });
            });
        });

        function searchGoogle(site, preset) {
            fetch('/api/search', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ site, preset })
            })
                .then(response => response.json())
                .then(data => {
                    const resultsDiv = document.getElementById('results');
                    resultsDiv.innerHTML = '';
                    if (data.length > 0) {
                        data.forEach(item => {
                            const resultItem = document.createElement('div');
                            resultItem.classList.add('result-item', 'mb-4', 'p-2', 'border-b');
                            resultItem.innerHTML = `
                                <h3 class="text-lg font-semibold"><a href='${item.link}' target='_blank'>${item.title}</a></h3>
                                <p class="text-gray-700">${item.snippet}</p>
                                <button class="copy-url-button p-1 bg-green-500 text-white rounded hover:bg-green-700" data-url='${item.link}'>Copy URL</button>
                            `;
                            resultsDiv.appendChild(resultItem);
                        });
                    } else {
                        resultsDiv.innerHTML = '<p>No results found.</p>';
                    }

                    document.querySelectorAll('.copy-url-button').forEach(button => {
                        button.addEventListener('click', () => {
                            const url = button.getAttribute('data-url');
                            copyToClipboard(url);
                        });
                    });

                    // Start session timer on successful search
                    showOverlay();
                    startSessionTimer();
                });
        }

        function copyToClipboard(text) {
            const textarea = document.createElement('textarea');
            textarea.value = text;
            document.body.appendChild(textarea);
            textarea.select();
            document.execCommand('copy');
            document.body.removeChild(textarea);

            // Show modal
            const modal = document.getElementById('modal');
            modal.classList.remove('hidden');
            setTimeout(() => {
                modal.classList.add('hidden');
            }, 1000);
        }

        let timerIntervalId;

        function startSessionTimer(initialTimeLeft) {
            clearInterval(timerIntervalId); // Clear any existing timer
            const timerDiv = document.getElementById('timer');
            let timeLeft = initialTimeLeft || 30; // Default to 30 seconds if not set

            // remove the select dropdown
            siteSelect.classList.add('hidden');

            timerIntervalId = setInterval(() => {
                timeLeft--;
                timerDiv.innerHTML = `Time left: ${timeLeft} seconds`;

                if (timeLeft <= 0) {
                    clearInterval(timerIntervalId);
                    disableControls();
                    timerDiv.innerHTML = `Session expired. Please wait to start a new session.`;

                    // Automatically start a new session after 5 seconds
                    setTimeout(() => {
                        enableControls();
                        hideOverlay();
                        timerDiv.innerHTML = 'Countdown Timer';
                        siteSelect.classList.remove('hidden');
                    }, 2000);
                }
            }, 1000);
        }

        function disableControls() {
            siteSelect.disabled = true;
            presetButtons.forEach(button => {
                button.disabled = true;
                button.classList.add('bg-blue-300', 'cursor-not-allowed');
                button.classList.remove('bg-blue-500', 'hover:bg-blue-700', 'cursor-pointer');
            });
        }

        function enableControls() {
            siteSelect.disabled = false;
            const site = siteSelect.value;
            presetButtons.forEach(button => {
                if (site) {
                    button.classList.remove('bg-blue-300', 'cursor-not-allowed');
                    button.classList.add('bg-blue-500', 'hover:bg-blue-700', 'cursor-pointer');
                    button.disabled = false;
                }
            });
        }

        function showOverlay() {
            overlay.classList.remove('hidden');
        }

        function hideOverlay() {
            overlay.classList.add('hidden');
        }

        // Initially show the overlay
        showOverlay();
    </script>
</body>

</html>
